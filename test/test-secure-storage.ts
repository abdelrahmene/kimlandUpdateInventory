import { secureStoreService } from '../src/storage/secure-store.service';
import { logger } from '../src/utils/logger';

async function testSecureStorage() {
  console.log('üîß Test du service de stockage s√©curis√©...');
  
  try {
    const testShop = 'test-boutique.myshopify.com';
    const testToken = 'shpat_test_token_12345';
    const testScope = 'read_products,write_products';
    
    console.log('\n1Ô∏è‚É£ Test de sauvegarde...');
    await secureStoreService.saveShopAuth(testShop, testToken, testScope);
    console.log('‚úÖ Sauvegarde r√©ussie');
    
    console.log('\n2Ô∏è‚É£ Test de r√©cup√©ration...');
    const retrievedAuth = await secureStoreService.getShopAuth(testShop);
    console.log('‚úÖ R√©cup√©ration r√©ussie:', {
      shop: retrievedAuth?.shop,
      hasToken: !!retrievedAuth?.accessToken,
      tokenMatch: retrievedAuth?.accessToken === testToken,
      scope: retrievedAuth?.scope,
      isValid: retrievedAuth?.isValid
    });
    
    console.log('\n3Ô∏è‚É£ Test de v√©rification d\'authentification...');
    const isAuthenticated = await secureStoreService.isShopAuthenticated(testShop);
    console.log('‚úÖ Authentification v√©rifi√©e:', isAuthenticated);
    
    console.log('\n4Ô∏è‚É£ Test de r√©cup√©ration de token uniquement...');
    const token = await secureStoreService.getShopToken(testShop);
    console.log('‚úÖ Token r√©cup√©r√©:', token === testToken);
    
    console.log('\n5Ô∏è‚É£ Test des statistiques...');
    const stats = await secureStoreService.getAuthStats();
    console.log('‚úÖ Statistiques:', stats);
    
    console.log('\n6Ô∏è‚É£ Test d\'invalidation...');
    await secureStoreService.invalidateShopAuth(testShop);
    const isStillAuthenticated = await secureStoreService.isShopAuthenticated(testShop);
    console.log('‚úÖ Invalidation r√©ussie:', !isStillAuthenticated);
    
    console.log('\n7Ô∏è‚É£ Test de suppression...');
    await secureStoreService.deleteShopAuth(testShop);
    const deletedAuth = await secureStoreService.getShopAuth(testShop);
    console.log('‚úÖ Suppression r√©ussie:', !deletedAuth);
    
    console.log('\nüéâ Tous les tests sont pass√©s avec succ√®s!');
    
  } catch (error) {
    console.error('‚ùå Erreur lors des tests:', error);
    process.exit(1);
  }
}

// Ex√©cuter les tests
if (require.main === module) {
  testSecureStorage().then(() => {
    console.log('\n‚úÖ Tests termin√©s');
    process.exit(0);
  }).catch(error => {
    console.error('‚ùå Tests √©chou√©s:', error);
    process.exit(1);
  });
}

export { testSecureStorage };
